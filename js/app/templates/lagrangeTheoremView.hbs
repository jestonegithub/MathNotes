

<div class="page_background">

    <div id="lagrange_inner_container">


        <div id="lagrange_header_top"></div>

        <div id="lagrange_title_container" class="lagrange_containers">LAGRANGE'S THEOREM</div>

        <div id="lagrange_statement_section">

            <div id="lagrange_statement_left_spacer"></div>

            <div id="lagrange_statement_container" class="lagrange_containers">Let $ G$ be a finite group and $ H$ a subgroup of $ G$.
                Then $ |H|$ (the order of $ H$) divides $|G|$.</div>

        </div>

        <div id="lagrange_left_word_column">


            <div id="lagrange_summary_container" class="lagrange_containers lagrange_paragraphs">LAGRANGE's THEOREM is a result in group theory that has powerful implications
                for the structure of finite groups. It follows from the fact that any equivalence relation can be used to separate
            a set into disjoint subsets whose union is the original set and from the fact that one can use any subgroup to define
            an equivalance relation on the original group.</div>


            <div id="lagrange_lemma_statement_container" class="lagrange_containers lagrange_paragraphs">LEMMA Let $ \sim$ be an equivalence relation on a set $ S$.
                Then $ S = \cup [a]$ where the union runs over one element from each class.
                Furthermore, if $ [a] \neq [b]$, then $ [a] \cap [b]$.
                Thus, $ \sim$ partitions $ S$ into disjoint equivalence classes.</div>

            <div id="lagrange_lemma_proof_container" class="lagrange_containers lagrange_paragraphs">PROOF OF LEMMA To prove that every two distinct equivalence classes are disjoint (empty intersection)
                we simply need to recognize that if any element $ c$ is shared by two equivalence classes, then the two equivalence classes must be equal.
                Note that $ c$ in $ [a]$ means that $ a \sim c$. Similarly for $ b \in [b]$. By transitivity, $ a \sim c, b \sim c$ means that $ a \sim b$.
                This is true for any $ a, b$ in their respective equivalence classes, so we must have that $ [a] = [b]$. In other words, either the two
                equivalence classes are disjoint and share no elements, or they share all their elements (and are just equal). Since every element in the
                original set belongs to only a single equivalence class, this means that all of the equivalence classes taken together comprise all of $ S$.</div>

            <div id="lagrange_proof_container" class="lagrange_containers lagrange_paragraphs">PROOF OF THEOREM Note that $H$ can be used to define an equivalence relation as follows: if $ab^{-1} \in H$, then $a \sim b$. We already
                know that $ H$ can be used to partition $ G$ based on the equivalence associated with cosets $ Ha$.
                Thus, $ G = \cup Ha$ where the union runs over $ a$ from distinct classes. The proof will follow if we can show that each $ Ha$ is in 1-1
                correspondence with $ H = H e_G$. Since $ G$ if finite, so must be any subgroup, and thus $ H$ is finite. Note also that $ Ha = \{ha|h \in H\}$.
                Thus, the product of $ a$ with each distinct element in $ h$ cannot increase the size of $ Ha$. The only possibility would be that the product of
                $a$ with two different $h$'s might be equal, thus reducing the size of $ Ha$ as compared to $ H$. But suppose $ ah = ah\prime$, then by left
                cancellation of $a$ in $ G$, we have that $ h=h\prime$. This means that every coset $ Ha$ and $ H$ must be in 1-1 correspondence. If two finite sets
                are in 1-1 correspondence, then they must have the same number of elements. So, now suppose there are $n$ cosets, including $ H$ itself.
                And suppose $ H$ has $ m$ elements. This means all $ n$ cosets have $ m$ elements. Then it follows that $ G$ has $ mn$ elements, or $ |G| = mn$.
                And in particular, $ |H| = m$ divides $ |G| = mn$.</div>

        </div>

        <div id="lagrange_letter_image" class="lagrange_containers"></div>

    </div>

</div>